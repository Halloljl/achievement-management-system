package org.hallo.ams.workbench.mapper;

import org.hallo.ams.workbench.domain.Patent;

import java.util.List;
import java.util.Map;

public interface PatentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_patent
     *
     * @mbg.generated Mon Apr 18 19:43:22 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_patent
     *
     * @mbg.generated Mon Apr 18 19:43:22 CST 2022
     */
    int insert(Patent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_patent
     *
     * @mbg.generated Mon Apr 18 19:43:22 CST 2022
     */
    int insertSelective(Patent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_patent
     *
     * @mbg.generated Mon Apr 18 19:43:22 CST 2022
     */
    Patent selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_patent
     *
     * @mbg.generated Mon Apr 18 19:43:22 CST 2022
     */
    int updateByPrimaryKeySelective(Patent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_patent
     *
     * @mbg.generated Mon Apr 18 19:43:22 CST 2022
     */
    int updateByPrimaryKey(Patent record);

    /**
     *  保存创建的专利
     * @param patent
     * @return
     */
    int insertPatent(Patent patent);

    /**
     * 查看分页专利
     * @param map 查询条件
     * @return 分页的专利列表
     */
    List<Patent> selectPatentByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询记录的数量
     * @param map
     * @return
     */
    int selectCountOfPatentByCondition(Map<String,Object> map);

    /**
     * 根据ids来批量删除专利
     * @param ids
     * @return
     */
    int deletePatentByIds(String[] ids);

    /**
     * 根据id查询专利的信息
     * @param id
     * @return
     */
    Patent selectPatentById(String id);

    /**
     * 更新专利
     * @param patent
     * @return
     */
    int updatePatent(Patent patent);


    /**
     * 查询所有的专利
     * @return
     */
    List<Patent> selectAllPatents();

    /**
     * 根据ids查找专利列表
     * @param ids
     * @return
     */
    List<Patent> selectPatentsByIds(String[] ids);

    /**
     *  批量保存专利
     * @return
     */
    int insertPatentsByList(List<Patent> PatentList);

    /**
     * 根据专利id查询专利的详细详细
     * @param id
     * @return
     */
    Patent selectPatentForDetailById(String id);
    
}