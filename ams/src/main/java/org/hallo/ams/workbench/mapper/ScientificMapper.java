package org.hallo.ams.workbench.mapper;

import org.hallo.ams.workbench.domain.Scientific;

import java.util.List;
import java.util.Map;

public interface ScientificMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_scientific
     *
     * @mbg.generated Mon Apr 18 00:09:13 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_scientific
     *
     * @mbg.generated Mon Apr 18 00:09:13 CST 2022
     */
    int insert(Scientific record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_scientific
     *
     * @mbg.generated Mon Apr 18 00:09:13 CST 2022
     */
    int insertSelective(Scientific record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_scientific
     *
     * @mbg.generated Mon Apr 18 00:09:13 CST 2022
     */
    Scientific selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_scientific
     *
     * @mbg.generated Mon Apr 18 00:09:13 CST 2022
     */
    int updateByPrimaryKeySelective(Scientific record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_scientific
     *
     * @mbg.generated Mon Apr 18 00:09:13 CST 2022
     */
    int updateByPrimaryKey(Scientific record);


    /**
     *  保存创建的科研项目
     * @return
     */
    int insertScientific(Scientific scientific);



    /**
     * 查看分页科研项目
     * @param map 查询条件
     * @return 分页的科研项目列表
     */
    List<Scientific> selectScientificByConditionForPage(Map<String,Object> map);


    /**
     * 根据条件查询记录的数量
     * @param map
     * @return
     */
    int selectCountOfScientificByCondition(Map<String,Object> map);

    /**
     * 根据ids来批量删除科研项目
     * @param ids
     * @return
     */
    int deleteScientificByIds(String[] ids);

    /**
     * 根据id查询科研项目的信息
     * @param id
     * @return
     */
    Scientific selectScientificById(String id);

    /**
     * 更新科研项目
     * @param scientific
     * @return
     */
    int updateScientific(Scientific scientific);


    /**
     * 查询所有的科研项目
     * @return
     */
    List<Scientific> selectAllScientifics();

    /**
     * 根据ids查找科研项目列表
     * @param ids
     * @return
     */
    List<Scientific> selectScientificsByIds(String[] ids);

    /**
     *  批量保存科研项目
     * @return
     */
    int insertScientificsByList(List<Scientific> scientificList);

    /**
     * 根据市场活动id查询科研项目的详细详细
     * @param id
     * @return
     */
    Scientific selectScientificForDetailById(String id);
}