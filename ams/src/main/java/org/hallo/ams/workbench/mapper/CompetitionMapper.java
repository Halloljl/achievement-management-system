package org.hallo.ams.workbench.mapper;

import org.hallo.ams.workbench.domain.Competition;

import java.util.List;
import java.util.Map;

public interface CompetitionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_competition
     *
     * @mbg.generated Tue Apr 19 16:28:54 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_competition
     *
     * @mbg.generated Tue Apr 19 16:28:54 CST 2022
     */
    int insert(Competition record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_competition
     *
     * @mbg.generated Tue Apr 19 16:28:54 CST 2022
     */
    int insertSelective(Competition record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_competition
     *
     * @mbg.generated Tue Apr 19 16:28:54 CST 2022
     */
    Competition selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_competition
     *
     * @mbg.generated Tue Apr 19 16:28:54 CST 2022
     */
    int updateByPrimaryKeySelective(Competition record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_competition
     *
     * @mbg.generated Tue Apr 19 16:28:54 CST 2022
     */
    int updateByPrimaryKey(Competition record);







    /**
     *  保存创建的省级及以上竞赛
     * @return
     */
    int insertCompetition(Competition competition);


    /**
     * 查看分页省级及以上竞赛
     * @param map 查询条件
     * @return 分页的省级竞赛列表
     */
    List<Competition> selectCompetitionByConditionForPage(Map<String,Object> map);


    /**
     * 根据条件查询记录的数量
     * @param map
     * @return
     */
    int selectCountOfCompetitionByCondition(Map<String,Object> map);


    /**
     * 根据ids来批量删除省级竞赛
     * @param ids
     * @return
     */
    int deleteCompetitionByIds(String[] ids);

    /**
     * 根据id查询省级竞赛的信息
     * @param id
     * @return
     */
    Competition selectCompetitionById(String id);

    /**
     * 更新省级竞赛
     * @param competition
     * @return
     */
    int updateCompetition(Competition competition);


    /**
     * 查询所有的省级竞赛
     * @return
     */
    List<Competition> selectAllCompetitions();

    /**
     * 根据ids查找省级竞赛列表
     * @param ids
     * @return
     */
    List<Competition> selectCompetitionsByIds(String[] ids);

    /**
     *  批量保存省级竞赛
     * @return
     */
    int insertCompetitionsByList(List<Competition> competitionList);

    /**
     * 根据省级竞赛id查询省级竞赛的详细详细
     * @param id
     * @return
     */
    Competition selectCompetitionForDetailById(String id);
    
    
    
    
}